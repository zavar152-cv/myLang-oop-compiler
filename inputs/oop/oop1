class MyClass extends BaseClass implements Interface1, Interface2 {
    public int myField, myField2;
    public MyClass varClass;
    public BaseClass v;


    public MyClass(int a, int b) {
        myField = a + b;
    }

    public int main() {
        myMethod(1);
        0;
    }

    public int myMethod(int x) {
        BuiltIn bi = new BuiltIn();
        IO io = new IO();
        io.printlnString("Hello, World!");
        // int a = 9;
        MyClass instance = new MyClass(1, 2);
        instance.testMethod(6);

        testMethod(5);

        BaseClass base = instance;
        base.parentMethod2(0);

        instance.varClass = new MyClass(8, 8);

        Interface1 interface1 = instance.varClass;
        interface1.doSomething(0);

        interface1 = new A();
        interface1.doSomething(0);

        MyClass[] objectsArray = bi.__allocRef(16); //8 * 2
        objectsArray[0] = new MyClass(1, 1);
        objectsArray[1] = new MyClass(9, 9);

        objectsArray[0].testMethod(89);
        objectsArray[1].testMethod(12);

        // myField = 7;
        // myField2 = 1;
        // myField = myField2;
        // instance.varClass = new MyClass(5, 5);
        // instance.varClass.myField = 78;
        // Interface1 unchecked1 = instance;

        //testMethod();
        // instance.testMethod(5);
        //instance.varClass.parentMethod2(5);
        // int b = instance.myField;
        //parentMethod(5);
        //parentMethod2(5);
        // unchecked1.doSomething(1);
        0;
    }

    private int testMethod(int x) {
        IO io = new IO();
        io.printlnString("Hello, World 2!");
        io.printlnInt(myField);
        io.printlnInt(x);
        0;
    }

    public int parentMethod(long l) {
        0;
    }

    public int parentMethod2(long l) {
        IO io = new IO();
        io.printlnString("MyClass parentMethod2");
        1;
    }

    public int doSomething(byte b) {
        IO io = new IO();
        io.printlnString("MyClass#Interface1 doSomething");
        io.printlnInt(myField);
        0;
    }

    public int doSomething5(int b) {
        8;
    }
}

class BaseClass extends MegaBaseClass {
    public BaseClass() {
        
    }

    public int parentMethod2(long l) {
        IO io = new IO();
        io.printlnString("BaseClass parentMethod2");
        0;
    }
}

class MegaBaseClass {

    public int testVar;

    public MegaBaseClass() {

    }
}

class A implements Interface1 {
    public A() {
        
    }

    public int doSomething(byte b) {
        IO io = new IO();
        io.printlnString("A#Interface1 doSomething");
        1;
    }

    public int doSomething5(int b) {
        5;
    }
}

interface MyInterface {
    int doSomething2();
}

interface Interface1 {
    int doSomething(byte b);

    int doSomething5(int b);
}

interface Interface2 {

}