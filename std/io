int strlength(string str) {
    int len = 0;
    while (true == true) {
        if (str[len] == '\0') {
            break;
        }
        len = len + 1;
    }
    len;
}

int println() {
    __writeChar('\n');
    0;
}

int printByte(byte toOut) {
    __write(toOut);
    0;
}

int printlnByte(byte toOut) {
    printByte(toOut);
    println();
    0;
}

int printChar(char toOut) {
    __writeChar(toOut);
    0;
}

int printlnChar(char toOut) {
    printChar(toOut);
    println();
    0;
}

int printString(string s) {
    int i = 0;
    int l = strlength(s);
    while (i != l) {
        __writeChar(s[i]);
        i = i + 1;
    }
    0;
}

int printlnString(string s) {
    printString(s);
    println();
    0;
}

long intBufferSize() {
    10;
}

long uintBufferSize() {
    10;
}

long longBufferSize() {
    19;
}

long ulongBufferSize() {
    19;
}


int printInt(int num, ref bufferRef) {
    char[] buffer = bufferRef;

    int temp = num;
    if (temp < 0) {
        __writeChar('-');
        temp = -temp;
    }

    if (temp == 0) {
        __writeChar('0');
    } else {
        int index = 0;

        while (temp > 0) {
            buffer[index] = (temp % 10) || 0x30;
            index = index + 1;
            temp = temp / 10;
        }

        index = index - 1;
        while (index != -1) {
            __writeChar(buffer[index]);
            index = index - 1;
        }
    }
    0;
}

int printlnInt(int num, ref bufferRef) {
    printInt(num, bufferRef);
    println();
    0;
}

int printLong(long num, char[] bufferRef) {
    char[] buffer = bufferRef;

    long temp = num;

    if (temp < __toLongFromInt(0)) {
        __writeChar('-');
        temp = -temp;
    }

    if (temp == __toLongFromInt(0)) {
        __writeChar('0');
    } else {
        int index = 0;

        while (temp > __toLongFromInt(0)) {
            buffer[index] = __toIntFromLong((temp % __toLongFromInt(10)) || __toLongFromInt(0x30));
            index = index + 1;
            temp = temp / __toLongFromInt(10);
        }

        index = index - 1;
        while (index != -1) {
            __writeChar(buffer[index]);
            index = index - 1;
        }
    }
    0;
}

int printlnLong(long num, char[] bufferRef) {
    printLong(num, bufferRef);
    println();
    0;
}