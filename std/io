class IO {
    private BuiltIn bi;
    private ref intBuffer;
    private ref longBuffer;

    public IO() {
        bi = new BuiltIn();
        intBuffer = bi.__allocRef(intBufferSize());
        longBuffer = bi.__allocRef(longBufferSize());
    }

    public int strlength(string str) {
        int len = 0;
        while (true == true) {
            if (str[len] == '\0') {
                break;
            }
            len = len + 1;
        }
        len;
    }

    public int println() {
        bi.__writeChar('\n');
        0;
    }

    public int printByte(byte toOut) {
        bi.__write(toOut);
        0;
    }

    public int printlnByte(byte toOut) {
        printByte(toOut);
        println();
        0;
    }

    public int printChar(char toOut) {
        bi.__writeChar(toOut);
        0;
    }

    public int printlnChar(char toOut) {
        printChar(toOut);
        println();
        0;
    }

    public int printString(string s) {
        int i = 0;
        int l = strlength(s);
        while (i != l) {
            bi.__writeChar(s[i]);
            i = i + 1;
        }
        0;
    }

    public int printlnString(string s) {
        printString(s);
        println();
        0;
    }

    private long intBufferSize() {
        80;
    }

    private long uintBufferSize() {
        80;
    }

    private long longBufferSize() {
        152;
    }

    private long ulongBufferSize() {
        152;
    }


    public int printInt(int num) {
        char[] buffer = intBuffer;

        int temp = num;
        if (temp < 0) {
            bi.__writeChar('-');
            temp = -temp;
        }

        if (temp == 0) {
            bi.__writeChar('0');
        } else {
            int index = 0;

            while (temp > 0) {
                buffer[index] = (temp % 10) || 0x30;
                index = index + 1;
                temp = temp / 10;
            }

            index = index - 1;
            while (index != -1) {
                bi.__writeChar(buffer[index]);
                index = index - 1;
            }
        }
        0;
    }

    public int printlnInt(int num) {
        printInt(num);
        println();
        0;
    }

    public int printLong(long num) {
        char[] buffer = longBuffer;

        long temp = num;

        if (temp < bi.__toLongFromInt(0)) {
            bi.__writeChar('-');
            temp = -temp;
        }

        if (temp == bi.__toLongFromInt(0)) {
            bi.__writeChar('0');
        } else {
            int index = 0;

            while (temp > bi.__toLongFromInt(0)) {
                buffer[index] = bi.__toIntFromLong((temp % bi.__toLongFromInt(10)) || bi.__toLongFromInt(0x30));
                index = index + 1;
                temp = temp / bi.__toLongFromInt(10);
            }

            index = index - 1;
            while (index != -1) {
                bi.__writeChar(buffer[index]);
                index = index - 1;
            }
        }
        0;
    }

    public int printlnLong(long num) {
        printLong(num);
        println();
        0;
    }
}